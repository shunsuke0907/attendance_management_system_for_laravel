{
  "manifest": {
    "name": "img-loader",
    "version": "3.0.1",
    "description": "Image minimizing loader for webpack 4",
    "keywords": [
      "image",
      "imagemin",
      "image-loader",
      "optimize",
      "minify",
      "webpack",
      "webpack-loader"
    ],
    "repository": {
      "type": "git",
      "url": "http://github.com/vanwagonet/img-loader.git"
    },
    "author": {
      "name": "Andy VanWagoner",
      "email": "andy@vanwago.net"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/vanwagonet/img-loader/issues"
    },
    "homepage": "https://github.com/vanwagonet/img-loader",
    "dependencies": {
      "loader-utils": "^1.1.0"
    },
    "peerDependencies": {
      "imagemin": "^5.0.0 || ^6.0.0"
    },
    "devDependencies": {
      "file-loader": "^2.0.0",
      "imagemin": "^6.0.0",
      "imagemin-gifsicle": "^5.2.0",
      "imagemin-svgo": "^7.0.0",
      "memory-fs": "^0.4.1",
      "mocha": "^5.0.0",
      "standard": "^12.0.0",
      "webpack": "^4.6.0"
    },
    "scripts": {
      "pretest": "standard",
      "test": "mocha __tests__/*.spec.js"
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v4/npm-img-loader-3.0.1-c279691c0a9e6b94fa7d8318d2a6596d98bcee78/node_modules/img-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "# img-loader\n\n[![npm Version][npm-image]][npm]\n[![Greenkeeper badge][greenkeeper-image]][greenkeeper]\n[![Build Status][build-image]][build]\n\n[![JS Standard Style][style-image]][style]\n[![MIT License][license-image]][LICENSE]\n\nImage minimizing loader for webpack 4, meant to be used with [url-loader](https://github.com/webpack/url-loader), [file-loader](https://github.com/webpack/file-loader), or [raw-loader](https://github.com/webpack/raw-loader)\n\n> Minify PNG, JPEG, GIF and SVG images with [imagemin](https://github.com/imagemin/imagemin) [plugins](https://www.npmjs.com/search?q=keywords:imageminplugin)\n\nimg-loader has a peer dependency on `imagemin`, so you will need to make sure to include that, along with any imagemin plugins you will use.\n\n\n## Install\n\n```sh\n$ npm install img-loader --save-dev\n```\n\n\n## Usage\n\n[Documentation: Using loaders](https://webpack.js.org/concepts/loaders/)\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.(jpe?g|png|gif|svg)$/i,\n      use: [\n        'url-loader?limit=10000',\n        'img-loader'\n      ]\n    }\n  ]\n}\n```\n\nBy default the loader simply passes along the image unmodified.\n\n\n### Options\n\nOptions are forwarded to `imagemin.buffer(image, options)`, so any plugins you would like to use for optimizing the images are passed as the `plugins` property.\n\nFor more details on each plugin's options, see their documentation on [Github](https://github.com/imagemin).\n\n```js\n{\n  module: {\n    rules: [\n      {\n        test: /\\.(jpe?g|png|gif|svg)$/i,\n        use: [\n          'url-loader?limit=10000',\n          {\n            loader: 'img-loader',\n            options: {\n              plugins: [\n                require('imagemin-gifsicle')({\n                  interlaced: false\n                }),\n                require('imagemin-mozjpeg')({\n                  progressive: true,\n                  arithmetic: false\n                }),\n                require('imagemin-pngquant')({\n                  floyd: 0.5,\n                  speed: 2\n                }),\n                require('imagemin-svgo')({\n                  plugins: [\n                    { removeTitle: true },\n                    { convertPathData: false }\n                  ]\n                })\n              ]\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n`plugins` can also be a function, which will receive the [webpack loader context](https://webpack.js.org/api/loaders/#the-loader-context) and should return the plugins array.\n```js\n{\n  module: {\n    rules: [\n      {\n        test: /\\.(jpe?g|png|gif|svg)$/i,\n        use: [\n          'url-loader?limit=10000',\n          {\n            loader: 'img-loader',\n            options: {\n              plugins (context) {\n                if (process.env.NODE_ENV === 'production') return []\n                return [\n                  require('imagemin-svgo')({\n                    plugins: [\n                      { cleanupIDs: false },\n                      {\n                        prefixIds: {\n                          prefix: path.basename(context.resourcePath, 'svg')\n                        }\n                      }\n                    ]\n                  })\n                ]\n              }\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nIf you only want to run imagemin in production builds, you can omit the `img-loader` or leave plugins empty in your production configuration file. If you don't keep a separate configuration for prod builds, something like the following also works:\n\n```js\n{\n  loader: 'img-loader',\n  options: {\n    plugins: process.env.NODE_ENV === 'production' && [\n      require('imagemin-svgo')({})\n      // etc.\n    ]\n  }\n}\n```\n\n\n## Migrating from 2.x\n\nTo get the default behavior from version `2.0.1`, you'll need to install these imagemin plugins:\n\n* [imagemin-gifsicle](https://github.com/imagemin/imagemin-gifsicle)\n* [imagemin-mozjpeg](https://github.com/imagemin/imagemin-mozjpeg)\n* [imagemin-optipng](https://github.com/imagemin/imagemin-optipng)\n* [imagemin-svgo](https://github.com/imagemin/imagemin-svgo)\n\nThen use this loader setup in your webpack configuration file:\n\n```js\n{\n  loader: 'img-loader',\n  options: {\n    plugins: [\n      require('imagemin-gifsicle')({}),\n      require('imagemin-mozjpeg')({}),\n      require('imagemin-optipng')({}),\n      require('imagemin-svgo')({})\n    ]\n  }\n}\n```\n\nThe options object you had under a plugin's name property, should instead be passed directly to the plugin after you require it.\n\nIf you used the optional `pngquant` settings, then you will additionally need to install [imagemin-pngquant](https://github.com/imagemin/imagemin-pngquant), and add it to your plugins array as any other imagemin plugin.\n\n\n## License\n\nThis software is free to use under the MIT license. See the [LICENSE-MIT file][LICENSE] for license text and copyright information.\n\n[npm]: https://www.npmjs.org/package/img-loader\n[npm-image]: https://img.shields.io/npm/v/img-loader.svg\n[greenkeeper-image]: https://badges.greenkeeper.io/thetalecrafter/img-loader.svg\n[greenkeeper]: https://greenkeeper.io/\n[build]: https://travis-ci.org/thetalecrafter/img-loader\n[build-image]: https://img.shields.io/travis/thetalecrafter/img-loader.svg\n[style]: https://github.com/feross/standard\n[style-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n[license-image]: https://img.shields.io/npm/l/img-loader.svg\n[LICENSE]: https://github.com/thetalecrafter/img-loader/blob/master/LICENSE-MIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/img-loader/-/img-loader-3.0.1.tgz#c279691c0a9e6b94fa7d8318d2a6596d98bcee78",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/img-loader/-/img-loader-3.0.1.tgz",
    "hash": "c279691c0a9e6b94fa7d8318d2a6596d98bcee78",
    "registry": "npm",
    "packageName": "img-loader"
  },
  "registry": "npm",
  "hash": "c279691c0a9e6b94fa7d8318d2a6596d98bcee78"
}