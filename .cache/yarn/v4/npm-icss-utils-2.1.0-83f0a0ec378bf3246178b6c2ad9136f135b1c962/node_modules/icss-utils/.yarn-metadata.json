{
  "manifest": {
    "name": "icss-utils",
    "version": "2.1.0",
    "description": "ICSS utils for postcss ast",
    "main": "lib/index.js",
    "files": [
      "lib"
    ],
    "scripts": {
      "build": "babel --out-dir lib src",
      "test": "jest --coverage",
      "precommit": "lint-staged",
      "prepublish": "yarn test && yarn run build"
    },
    "lint-staged": {
      "*.js": [
        "eslint",
        "prettier --write",
        "git add"
      ]
    },
    "eslintConfig": {
      "parserOptions": {
        "ecmaVersion": 6,
        "sourceType": "module"
      },
      "extends": "eslint:recommended"
    },
    "babel": {
      "presets": [
        [
          "env",
          {
            "targets": {
              "node": 4
            }
          }
        ]
      ]
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/css-modules/icss-utils.git"
    },
    "keywords": [
      "css",
      "modules",
      "icss",
      "postcss"
    ],
    "author": {
      "name": "Glen Maddern"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/css-modules/icss-utils/issues"
    },
    "homepage": "https://github.com/css-modules/icss-utils#readme",
    "dependencies": {
      "postcss": "^6.0.1"
    },
    "devDependencies": {
      "babel-cli": "^6.24.1",
      "babel-jest": "^20.0.3",
      "babel-preset-env": "^1.5.1",
      "eslint": "^3.19.0",
      "husky": "^0.13.3",
      "jest": "^20.0.3",
      "lint-staged": "^3.4.2",
      "prettier": "^1.3.1"
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v4/npm-icss-utils-2.1.0-83f0a0ec378bf3246178b6c2ad9136f135b1c962/node_modules/icss-utils/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Build Status](https://travis-ci.org/css-modules/icss-utils.svg)](https://travis-ci.org/css-modules/icss-utils)\n\n# ICSS Utils \n\n## replaceSymbols\n\nGoverns the way tokens are searched & replaced during the linking stage of ICSS loading.\n\nThis is broken into its own module in case the behaviour needs to be replicated in other PostCSS plugins\n(i.e. [CSS Modules Values](https://github.com/css-modules/postcss-modules-values))\n\n```js\nimport { replaceSymbols, replaceValueSymbols } from \"icss-utils\"\nreplaceSymbols(css, replacements)\nreplaceValueSymbols(string, replacements)\n```\n\nWhere:\n\n- `css` is the PostCSS tree you're working with\n- `replacements` is an JS object of `symbol: \"replacement\"` pairs, where all occurrences of `symbol` are replaced with `replacement`.\n\nA symbol is a string of alphanumeric, `-` or `_` characters. A replacement can be any string. They are replaced in the following places:\n\n- In the value of a declaration, i.e. `color: my_symbol;` or `box-shadow: 0 0 blur spread shadow-color`\n- In a media expression i.e. `@media small {}` or `@media screen and not-large {}`\n\n## extractICSS(css, removeRules = true)\n\nExtracts and remove (if removeRules is equal true) from PostCSS tree `:import` and `:export` statements.\n\n```js\nimport postcss from 'postcss';\nimport { extractICSS } from 'icss-utils'\n\nconst css = postcss.parse(`\n  :import(colors) {\n    a: b;\n  }\n  :export {\n    c: d;\n  }\n`)\n\nextractICSS(css)\n/*\n  {\n    icssImports: {\n      colors: {\n        a: 'b'\n      }\n    },\n    icssExports: {\n      c: 'd'\n    }\n  }\n*/\n```\n\n## createICSSRules(icssImports, icssExports)\n\nConverts icss imports and exports definitions to postcss ast\n\n```js\ncreateICSSRules({\n  colors: {\n    a: 'b'\n  }\n}, {\n  c: 'd'\n})\n```\n\n## License\n\nISC\n\n---\nGlen Maddern and Bogdan Chadkin, 2015.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/icss-utils/-/icss-utils-2.1.0.tgz#83f0a0ec378bf3246178b6c2ad9136f135b1c962",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/icss-utils/-/icss-utils-2.1.0.tgz",
    "hash": "83f0a0ec378bf3246178b6c2ad9136f135b1c962",
    "registry": "npm",
    "packageName": "icss-utils"
  },
  "registry": "npm",
  "hash": "83f0a0ec378bf3246178b6c2ad9136f135b1c962"
}