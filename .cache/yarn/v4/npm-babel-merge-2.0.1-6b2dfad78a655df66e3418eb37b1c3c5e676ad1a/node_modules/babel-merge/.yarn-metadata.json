{
  "manifest": {
    "name": "babel-merge",
    "version": "2.0.1",
    "main": "dist",
    "author": {
      "name": "Eli Perelman",
      "email": "eli@eliperelman.com"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/eliperelman/babel-merge.git"
    },
    "engines:": {
      "node": ">=6.10.0"
    },
    "scripts": {
      "build": "babel src --copy-files --out-dir dist --source-maps inline",
      "clean": "rimraf dist",
      "prebuild": "yarpm run clean",
      "precommit": "yarpm test",
      "prepublishOnly": "yarpm run build",
      "test": "BABEL_ENV=test nyc mocha 'test/**/*.test.js' -r @babel/register"
    },
    "dependencies": {
      "@babel/core": "^7.0.0-beta.49",
      "deepmerge": "^2.1.0",
      "object.omit": "^3.0.0"
    },
    "devDependencies": {
      "@babel/cli": "^7.0.0-beta.49",
      "@babel/plugin-proposal-class-properties": "^7.0.0-beta.49",
      "@babel/plugin-proposal-object-rest-spread": "^7.0.0-beta.49",
      "@babel/plugin-syntax-dynamic-import": "^7.0.0-beta.49",
      "@babel/preset-env": "^7.0.0-beta.49",
      "@babel/register": "^7.0.0-beta.49",
      "babel-plugin-istanbul": "^4.1.6",
      "fast-async": "^6.3.7",
      "husky": "^0.14.3",
      "mocha": "^5.2.0",
      "nyc": "^12.0.2",
      "rimraf": "^2.6.2",
      "yarpm": "^0.2.1"
    },
    "_registry": "npm",
    "_loc": "/home/vagrant/.cache/yarn/v4/npm-babel-merge-2.0.1-6b2dfad78a655df66e3418eb37b1c3c5e676ad1a/node_modules/babel-merge/package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-merge\n\n`babel-merge` merges multiple Babel configuration objects into a single copy.\nPlugin and preset objects and arrays will be merged together.\n\n[![NPM version][npm-image]][npm-url] [![NPM downloads][npm-downloads]][npm-url]\n\n_Note: **options** to plugins and presets **will not be merged**, but instead\nreplaced by the last matching item's options. This makes the behavior consistent\nwith how Babel works._\n\n## Requirements\n\n- Node.js v6.10+\n- Yarn or npm client\n\n## Installation\n\n`babel-merge` can be installed via the Yarn or npm clients.\n\n#### Yarn\n\n```bash\n❯ yarn add babel-merge\n```\n\n#### npm\n\n```bash\n❯ npm install --save babel-merge\n```\n\n## Usage\n\n* __merge(a, b, _options_)__\n* __merge.all([a, b, ..., z], _options_)__\n\nWhere `a`, `b`, `z` are [Babel configuration objects](https://babeljs.io/docs/usage/api/#options) and `options` is a [deepmerge](https://github.com/KyleAMathews/deepmerge#api) options object.\n\n```js\nconst merge = require('babel-merge');\n\nconst together = merge(\n  {\n    presets: [\n      ['@babel/preset-env', {\n        targets: {\n          browsers: ['latest 1 Chrome']\n        }\n      }]\n    ]\n  },\n  {\n    presets: [\n      ['@babel/preset-env', {\n        targets: {\n          browsers: ['latest 1 Firefox']\n        }\n      }]\n    ]\n  }\n)\n\nconsole.log(together);\n\n{\n  presets: [\n    ['@babel/preset-env', {\n      targets: {\n        browsers: [\n          'latest 1 Firefox'\n        ]\n      }\n    }]\n  ]\n}\n```\n\nIf a pathname was used in an earlier merge, you can still merge by exact name:\n\n```js\nconst merge = require('babel-merge');\n\nconst together = merge(\n  {\n    presets: [\n      [require.resolve('@babel/preset-env'), {\n        targets: {\n          browsers: ['latest 1 Chrome']\n        }\n      }]\n    ]\n  },\n  {\n    presets: [\n      ['@babel/preset-env', {\n        targets: {\n          browsers: ['latest 1 Firefox']\n        }\n      }]\n    ]\n  }\n)\n\nconsole.log(together);\n\n{\n  presets: [\n    ['/Users/me/code/app/node_modules/@babel/preset-env/lib/index.js', {\n      targets: {\n        browsers: [\n          'latest 1 Firefox'\n        ]\n      }\n    }]\n  ]\n}\n```\n\nEven works for plugins and presets within environments:\n\n```js\nconst merge = require('babel-merge');\n\nconst together = merge(\n  {\n    env: {\n      development: {\n        presets: [\n          [require.resolve('@babel/preset-env'), {\n            targets: {\n              browsers: ['latest 1 Chrome']\n            }\n          }]\n        ]\n      }\n    }\n  },\n  {\n    env: {\n      development: {\n        presets: [\n          ['@babel/preset-env', {\n            targets: {\n              browsers: ['latest 1 Firefox']\n            }\n          }]\n        ]\n      }\n    }\n  }\n)\n\nconsole.log(together);\n\n{\n  env: {\n    development: {\n      presets: [\n        ['/Users/me/code/app/node_modules/@babel/preset-env/lib/index.js', {\n          targets: {\n            browsers: [\n              'latest 1 Firefox'\n            ]\n          }\n        }]\n      ]\n    }\n  }\n}\n```\n\nOrder is preserved between non-option plugins and presets and ones with options:\n\n```js\nconst merge = require('babel-merge');\n\nconst together = merge(\n  {\n    plugins: [\n      'module:fast-async',\n      '@babel/plugin-syntax-dynamic-import'\n    ]\n  },\n  {\n    plugins: [\n      '@babel/plugin-proposal-object-rest-spread',\n      ['module:fast-async', { spec: true }],\n      '@babel/plugin-proposal-class-properties'\n    ]\n  }\n)\n\nconsole.log(together);\n\n{\n  plugins: [\n    ['module:fast-async', { spec: true }],\n    '@babel/plugin-syntax-dynamic-import',\n    '@babel/plugin-proposal-object-rest-spread',\n    '@babel/plugin-proposal-class-properties'\n  ]\n}\n```\n\n[npm-image]: https://img.shields.io/npm/v/babel-merge.svg\n[npm-downloads]: https://img.shields.io/npm/dt/babel-merge.svg\n[npm-url]: https://npmjs.org/package/babel-merge\n",
    "description": "`babel-merge` merges multiple Babel configuration objects into a single copy. Plugin and preset objects and arrays will be merged together.",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Eli Perelman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-merge/-/babel-merge-2.0.1.tgz#6b2dfad78a655df66e3418eb37b1c3c5e676ad1a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-merge/-/babel-merge-2.0.1.tgz",
    "hash": "6b2dfad78a655df66e3418eb37b1c3c5e676ad1a",
    "registry": "npm",
    "packageName": "babel-merge"
  },
  "registry": "npm",
  "hash": "6b2dfad78a655df66e3418eb37b1c3c5e676ad1a"
}